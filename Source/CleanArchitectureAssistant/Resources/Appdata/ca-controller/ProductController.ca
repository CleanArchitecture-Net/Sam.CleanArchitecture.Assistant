using CleanArchitecture.Application.Wrappers;
using CleanArchitecture.WebApi.Controllers;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Threading.Tasks;

namespace CleanArchitecture.WebApi.Controllers.v1;

[ApiVersion("1")]
//[Authorize]
public class ProductController : BaseApiController
{

    //[HttpGet]
    //public async Task<PagedResponse<ProductDto>> GetPagedListProduct([FromQuery] GetPagedListProductQuery model)
    //    => await Mediator.Send(model);

    //[HttpGet]
    //public async Task<BaseResult<ProductDto>> GetProductById([FromQuery] GetProductByIdQuery model)
    //    => await Mediator.Send(model);

    //[HttpPost]
    //public async Task<BaseResult<long>> CreateProduct(CreateProductCommand model)
    //    => await Mediator.Send(model);

    //[HttpPut]
    //public async Task<BaseResult> UpdateProduct(UpdateProductCommand model)
    //    => await Mediator.Send(model);

    //[HttpDelete]
    //public async Task<BaseResult> DeleteProduct([FromQuery] DeleteProductCommand model)
    //    => await Mediator.Send(model);

}